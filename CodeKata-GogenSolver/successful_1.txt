gogen files are: {'grid_file': 'C:/Users/ysu1/PycharmProjects/CodeKata-GogenSolver/games/1/grid.txt', 'wordlist_file': 'C:/Users/ysu1/PycharmProjects/CodeKata-GogenSolver/games/1/words.txt'}
function: load_data
Opening C:/Users/ysu1/PycharmProjects/CodeKata-GogenSolver/games/1/words.txt
words = ['BUS', 'DICTUM', 'GHOSTLY', 'JASPER', 'NEXUS', 'OPAQUE', 'SICK', 'VERB', 'VEST', 'WAIF']
function: get_adjacencies
Exit get_adjacencies function
Opening C:/Users/ysu1/PycharmProjects/CodeKata-GogenSolver/games/1/grid.txt
function: get_fixed_letters
Exit get_fixed_letters function
function: get_floating_letters
Exit get_floating_letters function
fixed_letters = {'F': {(0, 0)}, 'C': {(2, 0)}, 'L': {(4, 0)}, 'J': {(0, 2)}, 'S': {(2, 2)}, 'X': {(4, 2)}, 'G': {(0, 4)}, 'N': {(2, 4)}, 'R': {(4, 4)}}, 
floating_letters = {'A': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'B': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'D': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'E': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'H': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'I': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'K': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'M': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'O': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'P': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'Q': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'T': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'U': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'V': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'W': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'Y': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}}
Exit load_data function
positions = {'F': {(0, 0)}, 'C': {(2, 0)}, 'L': {(4, 0)}, 'J': {(0, 2)}, 'S': {(2, 2)}, 'X': {(4, 2)}, 'G': {(0, 4)}, 'N': {(2, 4)}, 'R': {(4, 4)}, 'A': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'B': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'D': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'E': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'H': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'I': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'K': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'M': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'O': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'P': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'Q': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'T': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'U': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'V': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'W': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}, 'Y': {(1, 2), (0, 1), (3, 2), (1, 3), (3, 3), (3, 0), (1, 0), (3, 1), (2, 1), (1, 4), (2, 3), (4, 3), (3, 4), (0, 3), (4, 1), (1, 1)}}
adjacencies = {'A': ['J', 'S', 'P', 'Q', 'W', 'I'], 'B': ['U', 'R'], 'C': ['I', 'T', 'I', 'K'], 'D': ['I'], 'E': ['P', 'R', 'N', 'X', 'U', 'V', 'R', 'V', 'S'], 'F': ['I'], 'G': ['H'], 'H': ['G', 'O'], 'I': ['D', 'C', 'S', 'C', 'A', 'F'], 'J': ['A'], 'K': ['C'], 'L': ['T', 'Y'], 'M': ['U'], 'N': ['E'], 'O': ['H', 'S', 'P'], 'P': ['S', 'E', 'O', 'A'], 'Q': ['A', 'U'], 'R': ['E', 'E', 'B'], 'S': ['U', 'O', 'T', 'A', 'P', 'U', 'I', 'E', 'T'], 'T': ['C', 'U', 'S', 'L', 'S'], 'U': ['B', 'S', 'T', 'M', 'X', 'S', 'Q', 'E'], 'V': ['E', 'E'], 'W': ['A'], 'X': ['E', 'U'], 'Y': ['L']}
function: get_grid
Exit get_grid function
positions_grid = [['F', '-', 'C', '-', 'L'], ['-', '-', '-', '-', '-'], ['J', '-', 'S', '-', 'X'], ['-', '-', '-', '-', '-'], ['G', '-', 'N', '-', 'R']]
function: draw_grid
Exit draw_grid function
function: find_solution
Exit find_solution function
function: get_grid
Exit get_grid function
solution_grid = [['F', 'K', 'C', 'Y', 'L'], ['D', 'I', 'Q', 'T', 'M'], ['J', 'A', 'S', 'U', 'X'], ['W', 'O', 'P', 'E', 'B'], ['G', 'H', 'N', 'V', 'R']]
function: draw_grid
Exit draw_grid function
Exit click function
